<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[《利用python进行数学分析》学习笔记之Matplotlib:Pandas中的绘图函数]]></title>
    <url>%2F2019%2F03%2F13%2F20190313-python-pandas-matplotlib%2F</url>
    <content type="text"><![CDATA[Pandas有许多能够利用DataFrame对象数据组织特点来创建标准图表的高级绘图方法，本文主要介绍的是pandas中的绘图函数。 12345#coding:utf-8import matplotlib.pyplot as pltimport pandas as pdimport numpy as npfrom pandas import DataFrame,Series 1. 线形图&emsp;df.plot( kind=&#39;line&#39;) Series 的plot 方法会以index作为X轴,画一条线 DataFrame 的plot 方法会以index作为X轴，给每一列绘制一条线,columns作为图例。 12345678910111213141516#第一种创建画布和画布分区方法，分开创建figure和subplot对象fig=plt.figure()#Series 的线形图ax1=fig.add_subplot(2,1,1)s=Series(np.random.rand(10).cumsum(),index=np.arange(0,100,10)) s.plot( kind='line')plt.xlabel(u"index") plt.title(u"Serise的线形图")plt.show()#DataFrame的线形图ax2=fig.add_subplot(2,1,2)df=DataFrame(np.random.rand(10,4).cumsum(0),index=np.arange(0,100,10),columns=pd.Index(['A','B','C','D'],name='Genus'))df.plot( kind='line')plt.xlabel(u"index") plt.title(u"DataFrame的线形图")plt.show() 其中，Series.plot方法的参数 kind ：图的类型，‘line’,’bar’,’barh’,’kde’ label ：图例标签 ax ：需要绘制的对象 rot ：旋转角度 xticks ：X轴刻度值 xlim ：X轴刻度范围 grid ：显示网格 2. 柱状图&emsp;df.plot( kind=&#39;bar&#39;) : 垂直柱状图 &emsp;df.plot( kind=&#39;barh&#39;) : 水平柱状图 &emsp;df.plot( kind=&#39;bar&#39;,stacked=True) : stacked属性为True可以设置为堆积柱状图 Series的柱状图123456#第二种创建画布和画布分区方法，创建figure，返回一个subplot对象fig,axes =plt.subplots(2,1) s=Series(np.random.rand(16),index=list('abcdefghijklmnop')) s.plot( kind= 'bar' ,ax=axes[0]) #返回的axes的数组可指定在哪个subplot对象上画图s.plot( kind= 'barh' ,ax=axes[1]) plt.show() DataFrame的柱状图 每一行的值为一组，每一列的columns为图例 12345fig,axes =plt.subplots(2,1) df=DataFrame(np.random.rand(4,4),index=['one','two','three','four'],columns=pd.Index(['A','B','C','D'],name='Genus')) df.plot( kind= 'bar',ax=axes[0] ) df.plot( kind= 'bar',ax=axes[1],stacked=True ) #stacked=True 可以生成堆积柱状图plt.show() 3.密度图( KDE, Kernel Density Estimate ,核密度估计 ) 密度图即为连续概率分布图，将分布近似为标准混合正态分布。 &emsp;df.plot( kind=&#39;kde&#39;) 1234567891011121314fig=plt.figure()#Series 的密度图fig.add_subplot(2,1,1)s=Series(np.random.rand(50).cumsum(),index=np.arange(0,100,2)) s.plot(kind='kde')plt.title(u"Series的密度图")plt.show()#DataFrame 的密度图，会给每一列都画一条密度估计线，并将columns自动生成图例fig.add_subplot(2,1,2)df=DataFrame(np.random.rand(10,4).cumsum(0),index=np.arange(0,100,10),columns=pd.Index(['A','B','C','D'],name='Genus'))df.plot(kind='kde')plt.title(u"DataFrame的密度图")plt.show() 4.直方图 直方图是对值频率进行离散化显示的柱状图，数据点呗拆分到离散的、间隔均匀的面元中。 &emsp;df.hist( bins=10) :bins属性可设置柱子数量 12345678910111213fig=plt.figure()#Series 的密度图fig.add_subplot(2,1,1)s=Series(np.random.rand(20).cumsum(),index=np.arange(0,100,5)) s.hist( bins=10)plt.title(u"Series的直方图")plt.show()#DataFrame 的密度图，会给每一列都画一张直方图，并将列名作为对应标题fig.add_subplot(2,1,2)df=DataFrame(np.random.rand(10,4).cumsum(0),index=np.arange(0,100,10),columns=pd.Index(['A','B','C','D'],name='Genus'))df.hist( bins=10)plt.show() 5.散点图 散点图是观察两个一维数据间关系的有效方式 &emsp;plt.scatter(X,Y) 1234567macro = pd.read_csv('macrodata.csv')data = macro[['cpi','m1','tbilrate','unemp']]trans_data = np.log(data).diff().dropna()# 画出两个Series之间的散点图plt.scatter(trans_data['m1'],trans_data['unemp'])plt.title('Change in log %s vs.log %s' % ('m1','unemp'))plt.show() DataFrame的散点图矩阵 创建散布图矩阵，会把DataFrame中任意两列画散点图，观察其之间的关系。 支持在对角线上放置各变量的直方图或者密度图 &emsp;pd.scatter_matrix( trans_data ,diagonal = &#39;kde&#39; ,color =&#39;k&#39; ,alpha=0.3) 123# 画出散布图矩阵pd.plotting.scatter_matrix( trans_data ,diagonal = 'kde' ,color ='k' ,alpha=0.3)plt.show()]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
